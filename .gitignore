# Ignore all virtual environments
venv/
docker_venv/
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
env/
build/
develop-eggs/
# dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
venv/
ENV/
.venv
.env
__pycache__
# IDEs
.idea/
.vscode/

# macOS
.DS_Store

# Windows
Thumbs.db
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
terraform-oidc-config/.terraform.lock.hcl
# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
terraform-oidc-config/.terraform.lock.hcl
# Compiled class file
*.class

**/.DS_Store

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*
# Ignore files generated by kubectl apply
*.yaml.kubectl_tmp

# Ignore logs and temporary files
*.log
*.tmp

# Ignore compiled binaries and dependencies
*.exe
*.dll
*.so
*.dylib
# Ignore Kubernetes configuration files
*.kubeconfig
*.config
*.crt
# .gitignore
azurek8s.config

# Python
__pycache__/
*.py[cod]
*.pyo
*.pyd
*.so
*.egg
*.egg-info/
dist/
build/

# Virtual environments
.env
.venv/
venv/
ENV/

# IDEs and editors
.vscode/
.idea/
*.swp

# Logs
*.log
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff
instance/
.webassets-cache

# Scrapy stuff
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# Environments
.env
.venv*
env/
venv/
ENV/
env.bak/
venv.bak/
.env

# Pyenv, Pipenv, Poetry, PDM configurations
.python-version
Pipfile.lock
poetry.lock
pdm.lock
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Spyder, Rope project settings
.spyderproject
.spyproject
.ropeproject

# Mkdocs documentation
/site

# Type checkers, MyPy, Pyre, Pytype
.mypy_cache/
.dmypy.json
dmypy.json
.pyre/
.pytype/

# Cython debug symbols
cython_debug/

# IDEs and editors
.idea/ # Uncomment if you want to ignore PyCharm settings
.vscode/

# Infrastructure and Deployment
.azure
kustomization.yaml
kind
kustomize
.terraform*
*.tfstate
*.tfstate.backup
*_env
*.data
.runs/
**/node_modules/
package-lock.json
src/api/api/agents/writer/.promptflow/
flow.flex.yaml

# Node.js dependencies
node_modules/
.pnpm-store/
.pnpm-debug.log

# React build output
src/api/static/react/
.vscode/launch.json
.env.sample
.env
*.env.sample